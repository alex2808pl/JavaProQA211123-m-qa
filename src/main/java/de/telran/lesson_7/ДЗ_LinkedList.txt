1. Создать объект ArrayList<Integer> и LinkedList<Integer>.
Просчитать время работы с большим количеством элементов для каждого объекта:
- добавление в конец - add или addLast
- добавление в начало - addFirst или add(0,значение)
- добавление в середину - add(index, значение)

- удаление с конца - removeLast
- удаление с начала - removeFirst
- удаление с середины - remove(index)
- удаление по значению - remove(значение)

- получение данных с конца - getLast
- получение данных с начала - getFirst
- получение данных с середины - get(index)

- изменение данных - set(index, новоеЗначение);
На основании полученных данных определите, для каких операций рекомендуется
использовать ArrayList или LinkedList.


2*.
Найти среднее значение элементов LinkedList<Integer>.
Перебрать LinkedList<String> и найти самую длинную строку.

Перебрать LinkedList<Integer> и найти наибольший элемент.
Перебрать LinkedList<String> и найти первое вхождение определенной строки.

Перебрать LinkedList<Integer> и заменить все элементы, кратные 3, на нули.
Перебрать LinkedList<String> и удалить все элементы, содержащие определенную подстроку.

Перебрать LinkedList<Integer> и вычислить произведение всех элементов.
Перебрать LinkedList<String> и заменить все гласные буквы в каждой строке на символ '*'.

Перебрать LinkedList<Integer> и вывести все элементы в обратном порядке.
Перебрать LinkedList<String> и найти самую длинную строку, не содержащую пробелов.

Перебрать LinkedList<Integer> и удалить все дубликаты элементов.
Перебрать LinkedList<String> и объединить все строки в одну с использованием разделителя.
